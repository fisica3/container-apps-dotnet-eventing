# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4195a6a6-7ca9-49be-a527-2973a9310d00'
  imageRepositorybus: 'container-apps-dotnet-eventing/servicebus'
  imageRepositoryhub: 'container-apps-dotnet-eventing/eventhub'
  containerRegistry: 'repasowebappacr.azurecr.io'
  dockerfilePathHub: '$(Build.SourcesDirectory)/event-hub/Dockerfile'
  dockerfilePathBus: '$(Build.SourcesDirectory)/service-bus/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: (Hub) Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryhub)
        dockerfile: $(dockerfilePathBus)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: (Bus) Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorybus)
        dockerfile: $(dockerfilePathBus)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Despliega la infra        
  jobs:
  - deployment: dev
    displayName: Deploy
    environment: DEV
    pool:
      vmImage: $(vmImageName)
      variables:
      - name: environment
        value: dev
      - group: ${{ format('variables-{0}', variables.environment) }}  
      strategy:
        runOnce:
          deploy:
            steps:      
            - task: AzureCLI@2
              inputs:
                azureSubscription: $(Subscription)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az --version
                  az group create --name $(RESOURCE_GROUP) --location 'canadacentral'
                  # $(location)
                  # az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile)    
